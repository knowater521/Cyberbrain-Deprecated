[
  {
    "code": "fo = 1  # start",
    "next": "func_a(fo)",
    "prev": "",
    "step_into": "",
    "returned_from": "",
    "var_changes": [
      "appear fo=1\n"
    ]
  },
  {
    "code": "func_a(fo)",
    "next": "",
    "prev": "fo = 1  # start",
    "step_into": "ba = [foo]  # b",
    "returned_from": "cyberbrain.register(foo)  # target",
    "tracking": [
      "fo"
    ],
    "param_to_arg": {
      "foo": [
        "fo"
      ]
    }
  },
  {
    "code": "ba = [foo]  # b",
    "next": "func_c(ba)",
    "prev": "func_a(fo)",
    "step_into": "",
    "returned_from": "",
    "var_changes": [
      "appear ba=[1]\n"
    ],
    "tracking": [
      "foo"
    ]
  },
  {
    "code": "func_c(ba)",
    "next": "foo = func_f(ba)",
    "prev": "ba = [foo]  # b",
    "step_into": "baa.append(None)  # d",
    "returned_from": "baa.append(\"?\")  # e",
    "var_changes": [
      "modify ba [1] -> [1, None, '?']\n"
    ],
    "tracking": [
      "ba",
      "foo"
    ],
    "param_to_arg": {
      "baa": [
        "ba"
      ]
    }
  },
  {
    "code": "baa.append(None)  # d",
    "next": "baa.append(\"?\")  # e",
    "prev": "func_c(ba)",
    "step_into": "",
    "returned_from": "",
    "var_changes": [
      "modify baa [1] -> [1, None]\n"
    ],
    "tracking": [
      "baa"
    ]
  },
  {
    "code": "baa.append(\"?\")  # e",
    "next": "",
    "prev": "baa.append(None)  # d",
    "step_into": "",
    "returned_from": "",
    "var_changes": [
      "modify baa [1, None] -> [1, None, '?']\n"
    ],
    "tracking": [
      "baa"
    ]
  },
  {
    "code": "foo = func_f(ba)",
    "next": "cyberbrain.register(foo)  # target",
    "prev": "func_c(ba)",
    "step_into": "x = len(bar)  # g",
    "returned_from": "return x  # h",
    "var_changes": [
      "modify foo 1 -> 3\n"
    ],
    "tracking": [
      "ba",
      "foo"
    ],
    "param_to_arg": {
      "bar": [
        "ba"
      ]
    }
  },
  {
    "code": "x = len(bar)  # g",
    "next": "return x  # h",
    "prev": "foo = func_f(ba)",
    "step_into": "",
    "returned_from": "",
    "var_changes": [
      "appear x=3\n"
    ],
    "tracking": [
      "bar"
    ]
  },
  {
    "code": "return x  # h",
    "next": "",
    "prev": "x = len(bar)  # g",
    "step_into": "",
    "returned_from": "",
    "tracking": [
      "x"
    ]
  },
  {
    "code": "cyberbrain.register(foo)  # target",
    "next": "",
    "prev": "foo = func_f(ba)",
    "step_into": "",
    "returned_from": "",
    "tracking": [
      "foo"
    ]
  }
]