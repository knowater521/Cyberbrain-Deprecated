[
  {
    "code": "y = {\n    \"longlonglonglonglonglonglonglong\": 1,\n    \"longlonglonglonglonglonglonglonglong\": 2,\n    \"longlonglonglonglonglonglonglonglonglong\": 3,\n}",
    "next": "def f(**kwargs):",
    "prev": "",
    "step_into": "",
    "returned_from": "",
    "var_changes": [
      "appear y={'longlonglonglonglonglonglonglong': 1, 'longlonglonglonglonglonglonglonglong': 2, 'longlonglonglonglonglonglonglonglonglong': 3}\n"
    ],
    "location": "multiline_statement.py: <module>"
  },
  {
    "code": "def f(**kwargs):",
    "next": "x = f(longlonglonglonglonglonglonglong=1,\n    longlonglonglonglonglonglonglonglong=2,\n    longlonglonglonglonglonglonglonglonglong=3)",
    "prev": "y = {\n    \"longlonglonglonglonglonglonglong\": 1,\n    \"longlonglonglonglonglonglonglonglong\": 2,\n    \"longlonglonglonglonglonglonglonglonglong\": 3,\n}",
    "step_into": "",
    "returned_from": "",
    "location": "multiline_statement.py: <module>",
    "tracking": [
      "y"
    ]
  },
  {
    "code": "x = f(longlonglonglonglonglonglonglong=1,\n    longlonglonglonglonglonglonglonglong=2,\n    longlonglonglonglonglonglonglonglonglong=3)",
    "next": "cyberbrain.register(y)",
    "prev": "def f(**kwargs):",
    "step_into": "pass",
    "returned_from": "pass",
    "location": "multiline_statement.py: <module>",
    "tracking": [
      "y"
    ],
    "param_to_arg": {
      "kwargs": []
    }
  },
  {
    "code": "pass",
    "next": "",
    "prev": "x = f(longlonglonglonglonglonglonglong=1,\n    longlonglonglonglonglonglonglonglong=2,\n    longlonglonglonglonglonglonglonglonglong=3)",
    "step_into": "",
    "returned_from": "",
    "location": "multiline_statement.py: f"
  },
  {
    "code": "cyberbrain.register(y)",
    "next": "",
    "prev": "x = f(longlonglonglonglonglonglonglong=1,\n    longlonglonglonglonglonglonglonglong=2,\n    longlonglonglonglonglonglonglonglonglong=3)",
    "step_into": "",
    "returned_from": "",
    "location": "multiline_statement.py: <module>",
    "tracking": [
      "y"
    ]
  }
]